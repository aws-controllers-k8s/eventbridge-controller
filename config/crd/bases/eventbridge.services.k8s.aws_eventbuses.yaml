---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.2
  name: eventbuses.eventbridge.services.k8s.aws
spec:
  group: eventbridge.services.k8s.aws
  names:
    kind: EventBus
    listKind: EventBusList
    plural: eventbuses
    shortNames:
    - eb
    - bus
    singular: eventbus
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.ackResourceMetadata.arn
      name: ARN
      priority: 1
      type: string
    - jsonPath: .status.conditions[?(@.type=="ACK.ResourceSynced")].status
      name: Synced
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: EventBus is the Schema for the EventBuses API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: |-
              EventBusSpec defines the desired state of EventBus.

              An event bus receives events from a source, uses rules to evaluate them,
              applies any configured input transformation, and routes them to the appropriate
              target(s). Your account's default event bus receives events from Amazon Web
              Services services. A custom event bus can receive events from your custom
              applications and services. A partner event bus receives events from an event
              source created by an SaaS partner. These events come from the partners services
              or applications.
            properties:
              deadLetterConfig:
                description: |-
                  Configuration details of the Amazon SQS queue for EventBridge to use as a
                  dead-letter queue (DLQ).

                  For more information, see Using dead-letter queues to process undelivered
                  events (https://docs.aws.amazon.com/eventbridge/latest/userguide/eb-rule-event-delivery.html#eb-rule-dlq)
                  in the EventBridge User Guide.
                properties:
                  arn:
                    type: string
                type: object
              description:
                description: The event bus description.
                type: string
              eventSourceName:
                description: |-
                  If you are creating a partner event bus, this specifies the partner event
                  source that the new event bus will be matched with.
                type: string
              kmsKeyIdentifier:
                description: |-
                  The identifier of the KMS customer managed key for EventBridge to use, if
                  you choose to use a customer managed key to encrypt events on this event
                  bus. The identifier can be the key Amazon Resource Name (ARN), KeyId, key
                  alias, or key alias ARN.

                  If you do not specify a customer managed key identifier, EventBridge uses
                  an Amazon Web Services owned key to encrypt events on the event bus.

                  For more information, see Managing keys (https://docs.aws.amazon.com/kms/latest/developerguide/getting-started.html)
                  in the Key Management Service Developer Guide.

                  Archives and schema discovery are not supported for event buses encrypted
                  using a customer managed key. EventBridge returns an error if:

                     * You call CreateArchive (https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_CreateArchive.html)
                     on an event bus set to use a customer managed key for encryption.

                     * You call CreateDiscoverer (https://docs.aws.amazon.com/eventbridge/latest/schema-reference/v1-discoverers.html#CreateDiscoverer)
                     on an event bus set to use a customer managed key for encryption.

                     * You call UpdatedEventBus (https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_UpdatedEventBus.html)
                     to set a customer managed key on an event bus with an archives or schema
                     discovery enabled.

                  To enable archives or schema discovery on an event bus, choose to use an
                  Amazon Web Services owned key. For more information, see Data encryption
                  in EventBridge (https://docs.aws.amazon.com/eventbridge/latest/userguide/eb-encryption.html)
                  in the Amazon EventBridge User Guide.
                type: string
              name:
                description: |-
                  The name of the new event bus.

                  Custom event bus names can't contain the / character, but you can use the
                  / character in partner event bus names. In addition, for partner event buses,
                  the name must exactly match the name of the partner event source that this
                  event bus is matched to.

                  You can't use the name default for a custom event bus, as this name is already
                  used for your account's default event bus.
                type: string
              tags:
                description: Tags to associate with the event bus.
                items:
                  description: |-
                    A key-value pair associated with an Amazon Web Services resource. In EventBridge,
                    rules and event buses support tagging.
                  properties:
                    key:
                      type: string
                    value:
                      type: string
                  type: object
                type: array
            required:
            - name
            type: object
          status:
            description: EventBusStatus defines the observed state of EventBus
            properties:
              ackResourceMetadata:
                description: |-
                  All CRs managed by ACK have a common `Status.ACKResourceMetadata` member
                  that is used to contain resource sync state, account ownership,
                  constructed ARN for the resource
                properties:
                  arn:
                    description: |-
                      ARN is the Amazon Resource Name for the resource. This is a
                      globally-unique identifier and is set only by the ACK service controller
                      once the controller has orchestrated the creation of the resource OR
                      when it has verified that an "adopted" resource (a resource where the
                      ARN annotation was set by the Kubernetes user on the CR) exists and
                      matches the supplied CR's Spec field values.
                      https://github.com/aws/aws-controllers-k8s/issues/270
                    type: string
                  ownerAccountID:
                    description: |-
                      OwnerAccountID is the AWS Account ID of the account that owns the
                      backend AWS service API resource.
                    type: string
                  region:
                    description: Region is the AWS region in which the resource exists
                      or will exist.
                    type: string
                required:
                - ownerAccountID
                - region
                type: object
              conditions:
                description: |-
                  All CRS managed by ACK have a common `Status.Conditions` member that
                  contains a collection of `ackv1alpha1.Condition` objects that describe
                  the various terminal states of the CR and its backend AWS service API
                  resource
                items:
                  description: |-
                    Condition is the common struct used by all CRDs managed by ACK service
                    controllers to indicate terminal states  of the CR and its backend AWS
                    service API resource
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition.
                      type: string
                    reason:
                      description: The reason for the condition's last transition.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type is the type of the Condition
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
